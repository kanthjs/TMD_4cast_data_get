View(test[[2]][[1]])
View(test[[2]][[1]])
WeatherAtLocation %>%
nest_mutate(weather_data, RH2 = if_else(rh > 90, 1, 0),
WT = if_else(rain >= 0.1, 1, 0),
Tbar = mean(tc),
cum_RH2 = sum(RH2),
cum_WT = sum(WT)
)
WeatherAtLocation %>%
nest_mutate(weather_data, RH2 = if_else(rh > 90, 1, 0),
WT = if_else(rain >= 0.1, 1, 0)) %>%
nest_summarize(weather.data,
Tbar = mean(tc),
cum_RH2 = sum(RH2),
cum_WT = sum(WT)
)
WeatherAtLocation %>%
nest_mutate(weather_data, RH2 = if_else(rh > 90, 1, 0),
WT = if_else(rain >= 0.1, 1, 0)) %>%
nest_summarize(weather_data,
Tbar = mean(tc),
cum_RH2 = sum(RH2),
cum_WT = sum(WT)
)
WeatherAtLocation %>%
nest_mutate(weather_data, RH2 = if_else(rh > 90, 1, 0),
WT = if_else(rain >= 0.1, 1, 0)) %>%
nest_summarize(weather_data,
Tbar = mean(tc),
cum_RH2 = sum(RH2),
cum_WT = sum(WT)
) %>%
unnest()
list_DF |> list_rbind(names_to = "id") |>
tidyr::nest(weather_data = -tambon.code)
test <- list_DF |> list_rbind(names_to = "id") |>
tidyr::nest(weather_data = -tambon.code) %>%
nest_mutate(weather_data, Date = (time))
library(lubridate)
test <- list_DF |> list_rbind(names_to = "id") |>
tidyr::nest(weather_data = -tambon.code) %>%
nest_mutate(weather_data, Date = dmy(time))
test <- list_DF |> list_rbind(names_to = "id") |>
tidyr::nest(weather_data = -tambon.code) %>%
nest_mutate(weather_data, Date = dmy(as.Date(time))
WeatherAtLocation %>%
test <- list_DF |> list_rbind(names_to = "id") |>
tidyr::nest(weather_data = -tambon.code) %>%
nest_mutate(weather_data, Date = dmy(as.Date(time)))
View(test)
View(test[[2]][[1]])
test <- list_DF |> list_rbind(names_to = "id") |>
tidyr::nest(weather_data = -tambon.code) %>%
nest_mutate(weather_data, Date = substr(time, start = 1, stop = 10)
)
View(test[[2]][[1]])
list_DF
json
weath$Date <- substr(weath$time, start = 1, stop = 10) |> ymd()
getWeather <- function(province.th, amphoe.th, tambon.th) {
base.url <- "https://data.tmd.go.th/nwpapi/v1/forecast/location/hourly/place?"
json <- request(base.url) |>
req_auth_bearer_token(Sys.getenv("tmd_token")) |>
req_url_query(
province = province.th,
amphoe = amphoe.th,
tambon = tambon.th,
fields = 'cond,tc,rh,rain',
date = "2024-10-12",
hour = 0,
duration = 23,
.multi = "explode"
) |>
req_throttle(rate = 10 / 60) |>
req_perform() |>
resp_body_json()
weath <- json |> pluck(1, 1) |> pluck("forecasts") |> map_dfr(\(x) {
tibble(
time = x |> pluck("time"),
tc = x |> pluck("data", "tc"),
rh = x |> pluck("data", "rh"),
rain = x |> pluck("data", "rain"),
cond = x |> pluck("data", "cond")
)
})
weath$tambon.code <- location_th$ADM3_PCODE[i]
weath$Date <- substr(weath$time, start = 1, stop = 10) |> ymd()
weath %>% relocate(tambon.code)
}
# retrieve
list_DF <- list()
#for (i in 60:nrow(all.marks)){
for (i in 1:10){
print(i)
list_DF[[i]] <- getWeather(province.th = location_th$ADM1_TH[i],
amphoe.th = location_th$ADM2_TH[i],
tambon.th = location_th$ADM3_TH[i])
}
saveRDS(list_DF, file = "TMD10.rds")
list_DF
getWeather <- function(province.th, amphoe.th, tambon.th) {
base.url <- "https://data.tmd.go.th/nwpapi/v1/forecast/location/hourly/place?"
json <- request(base.url) |>
req_auth_bearer_token(Sys.getenv("tmd_token")) |>
req_url_query(
province = province.th,
amphoe = amphoe.th,
tambon = tambon.th,
fields = 'cond,tc,rh,rain',
date = "2024-10-12",
hour = 0,
duration = 23,
.multi = "explode"
) |>
req_throttle(rate = 10 / 60) |>
req_perform() |>
resp_body_json()
weath <- json |> pluck(1, 1) |> pluck("forecasts") |> map_dfr(\(x) {
tibble(
time = x |> pluck("time"),
tc = x |> pluck("data", "tc"),
rh = x |> pluck("data", "rh"),
rain = x |> pluck("data", "rain"),
cond = x |> pluck("data", "cond")
)
})
weath$tambon.code <- location_th$ADM3_PCODE[i]
weath$Date <- substr(weath$time, start = 1, stop = 10) |> ymd()
weath %>% relocate(tambon.code, Date)
}
rowbind <- list_DF |> list_rbind(names_to = "id") |> nest_by(tambon.code, Date)
View(rowbind)
View(rowbind[[3]][[1]])
getWeather <- function(province.th, amphoe.th, tambon.th) {
base.url <- "https://data.tmd.go.th/nwpapi/v1/forecast/location/hourly/place?"
json <- request(base.url) |>
req_auth_bearer_token(Sys.getenv("tmd_token")) |>
req_url_query(
province = province.th,
amphoe = amphoe.th,
tambon = tambon.th,
fields = 'cond,tc,rh,rain',
date = "2024-10-12",
hour = 0,
duration = 24,
.multi = "explode"
) |>
req_throttle(rate = 10 / 60) |>
req_perform() |>
resp_body_json()
weath <- json |> pluck(1, 1) |> pluck("forecasts") |> map_dfr(\(x) {
tibble(
time = x |> pluck("time"),
tc = x |> pluck("data", "tc"),
rh = x |> pluck("data", "rh"),
rain = x |> pluck("data", "rain"),
cond = x |> pluck("data", "cond")
)
})
weath$tambon.code <- location_th$ADM3_PCODE[i]
weath$Date <- substr(weath$time, start = 1, stop = 10) |> ymd()
weath %>% relocate(tambon.code, Date)
}
### 1. Here is for retrieve the data ####
main.domain = "https://hpc.tmd.go.th/static/csv/"
# we need to specify the data you want to retrieve data
#format 20240422"
this.time = "20241015"
#time at 1am in that day
when = "00"
# select factor, t2m  = temp, rhum = humidity, p3h = precipitation
var = "t2m"
vars <- c("t2m", "rhum", "p3h")
tmd.data.list <- list()
for (i in 1:length(vars)) {
tmd.data.list[i] <- paste0(main.domain,
this.time,
when,
"/",
vars[i],
".d01." ,
this.time,
when,
".csv")
}
# we need to specify the data you want to retrieve data
#format 20240422"
this.time = "20241016"
#time at 1am in that day
when = "00"
# select factor, t2m  = temp, rhum = humidity, p3h = precipitation
var = "t2m"
vars <- c("t2m", "rhum", "p3h")
tmd.data.list <- list()
for (i in 1:length(vars)) {
tmd.data.list[i] <- paste0(main.domain,
this.time,
when,
"/",
vars[i],
".d01." ,
this.time,
when,
".csv")
}
tmd.list <- tmd.data.list %>% map(read_csv)
names(tmd.list) <- vars
for (i in 1:length(vars)) {
tmd.data.list[i] <- paste0(main.domain,
this.time,
when,
"/",
vars[i],
".d01." ,
this.time,
when,
".csv")
}
tmd.list <- tmd.data.list %>% map(read_csv)
library(tidyverse)
library(lubridate)
library(tibble)
library(nplyr)
tmd.list <- tmd.data.list %>% map(read_csv)
View(tmd.list)
list_rbind(tmd.list, names_to = "var")
list_rbind(tmd.list, names_to = "var") |>
gather(key = "time", value = "value", c(-lat, -lon, -var))
tesxt <- list_rbind(tmd.list, names_to = "var") |>
gather(key = "time", value = "value", c(-lat, -lon, -var)) |>
pivot_wider(names_from = var, values_from = value) |>
nest(weather_data = c(-lat, -lon)) |>
nest_mutate(weather_data, tc = t2m - 273.15)
tesxt <- list_rbind(tmd.list, names_to = "var") |>
gather(key = "time", value = "value", c(-lat, -lon, -var)) |>
pivot_wider(names_from = var, values_from = value) |>
nest(weather_data = c(-lat, -lon))
View(tesxt)
View(tesxt[[3]][[1]])
Sys.Date()
Sys.Date()-1
View(tesxt[[3]][[80]])
# load: shp file: https://data.humdata.org/dataset/cod-ab-tha
# ref: yt: https://www.youtube.com/watch?v=fdOriwtVyT8
# mapshp website: https://mapshaper.org/
# load library
library(readxl)
library(tidyverse)
library(httr2)
location_th <- read_excel("all_tambons.xlsx")
View(location_th)
getWeather <- function(province.th, amphoe.th, tambon.th) {
base.url <- "https://data.tmd.go.th/nwpapi/v1/forecast/location/hourly/place?"
json <- request(base.url) |>
req_auth_bearer_token(Sys.getenv("tmd_token")) |>
req_url_query(
province = province.th,
amphoe = amphoe.th,
tambon = tambon.th,
fields = 'cond,tc,rh,rain',
date = "2024-10-12",
hour = 0,
duration = 24,
.multi = "explode"
) |>
req_throttle(rate = 10 / 60) |>
req_perform() |>
resp_body_json()
weath <- json |> pluck(1, 1) |> pluck("forecasts") |> map_dfr(\(x) {
tibble(
time = x |> pluck("time"),
tc = x |> pluck("data", "tc"),
rh = x |> pluck("data", "rh"),
rain = x |> pluck("data", "rain"),
cond = x |> pluck("data", "cond")
)
})
weath$tambon.code <- location_th$ADM3_PCODE[i]
weath$Date <- substr(weath$time, start = 1, stop = 10) |> ymd()
weath %>% relocate(tambon.code, Date)
}
View(tesxt)
# retrieve
list_DF <- list()
#for (i in 60:nrow(all.marks)){
for (i in 1:10){
print(i)
list_DF[[i]] <- getWeather(province.th = location_th$ADM1_TH[i],
amphoe.th = location_th$ADM2_TH[i],
tambon.th = location_th$ADM3_TH[i])
}
getWeather <- function(province.th, amphoe.th, tambon.th) {
base.url <- "https://data.tmd.go.th/nwpapi/v1/forecast/location/hourly/place?"
json <- request(base.url) |>
req_auth_bearer_token(Sys.getenv("tmd_token")) |>
req_url_query(
province = province.th,
amphoe = amphoe.th,
tambon = tambon.th,
fields = 'cond,tc,rh,rain',
date = "2024-10-16",
hour = 0,
duration = 24,
.multi = "explode"
) |>
req_throttle(rate = 10 / 60) |>
req_perform() |>
resp_body_json()
weath <- json |> pluck(1, 1) |> pluck("forecasts") |> map_dfr(\(x) {
tibble(
time = x |> pluck("time"),
tc = x |> pluck("data", "tc"),
rh = x |> pluck("data", "rh"),
rain = x |> pluck("data", "rain"),
cond = x |> pluck("data", "cond")
)
})
weath$tambon.code <- location_th$ADM3_PCODE[i]
weath$Date <- substr(weath$time, start = 1, stop = 10) |> ymd()
weath %>% relocate(tambon.code, Date)
}
# retrieve
list_DF <- list()
#for (i in 60:nrow(all.marks)){
for (i in 1:10){
print(i)
list_DF[[i]] <- getWeather(province.th = location_th$ADM1_TH[i],
amphoe.th = location_th$ADM2_TH[i],
tambon.th = location_th$ADM3_TH[i])
}
getWeather <- function(province.th, amphoe.th, tambon.th) {
base.url <- "https://data.tmd.go.th/nwpapi/v1/forecast/location/hourly/place?"
json <- request(base.url) |>
req_auth_bearer_token(Sys.getenv("tmd_token")) |>
req_url_query(
province = province.th,
amphoe = amphoe.th,
tambon = tambon.th,
fields = 'cond,tc,rh,rain',
date = "2024-10-17",
hour = 0,
duration = 24,
.multi = "explode"
) |>
req_throttle(rate = 10 / 60) |>
req_perform() |>
resp_body_json()
weath <- json |> pluck(1, 1) |> pluck("forecasts") |> map_dfr(\(x) {
tibble(
time = x |> pluck("time"),
tc = x |> pluck("data", "tc"),
rh = x |> pluck("data", "rh"),
rain = x |> pluck("data", "rain"),
cond = x |> pluck("data", "cond")
)
})
weath$tambon.code <- location_th$ADM3_PCODE[i]
weath$Date <- substr(weath$time, start = 1, stop = 10) |> ymd()
weath %>% relocate(tambon.code, Date)
}
# retrieve
list_DF <- list()
#for (i in 60:nrow(all.marks)){
for (i in 1:10){
print(i)
list_DF[[i]] <- getWeather(province.th = location_th$ADM1_TH[i],
amphoe.th = location_th$ADM2_TH[i],
tambon.th = location_th$ADM3_TH[i])
}
Date <- Sys.Date()
d(Date)
day(Date)
library(tidyverse)
library(lubridate)
library(tibble)
library(nplyr)
day(Date)
Date
month(Date)
paste(year(Date), month(Date), day(Date))
paste0(year(Date), month(Date), day(Date))
# we need to specify the data you want to retrieve data
#format 20240422"
#this.time = "20241016"
Date <- Sys.Date()
today <- paste0(year(Date), month(Date), day(Date))
#time at 1am in that day
when <- "00"
vars <- c("t2m", "rhum", "p3h")
tmd.data.list <- list()
for (i in 1:length(vars)) {
tmd.data.list[i] <- paste0(main.domain,
this.time,
when,
"/",
vars[i],
".d01." ,
today,
when,
".csv")
}
### 1. Here is for retrieve the data ####
main.domain = "https://hpc.tmd.go.th/static/csv/"
### 1. Here is for retrieve the data ####
main.domain <- "https://hpc.tmd.go.th/static/csv/"
for (i in 1:length(vars)) {
tmd.data.list[i] <- paste0(main.domain,
this.time,
when,
"/",
vars[i],
".d01." ,
today,
when,
".csv")
}
tmd.data.list[i] <- paste0(main.domain,
today,
when,
"/",
vars[i],
".d01." ,
today,
when,
".csv")
tmd.list <- tmd.data.list %>% map(read_csv)
names(tmd.list) <- vars
tmd.list <- tmd.data.list %>% map(read_csv)
length(vars)
tmd.data.list
for (i in 1:length(vars)) {
tmd.data.list[i] <- paste0(main.domain,
today,
when,
"/",
vars[i],
".d01." ,
today,
when,
".csv")
}
tmd.list <- tmd.data.list %>% map(read_csv)
paste("weather_forecast_", today, ".rds")
paste0("weather_forecast_", today, ".rds"
paste0("weather_forecast_", today, ".rds")
paste0("weather_forecast_", today, ".rds")
names(tmd.list) <- vars
weather <- list_rbind(tmd.list, names_to = "var")
saveRDS(weather, file = paste0("weather_forecast_", today, ".rds"))
### domain 2 #####
tmd.data.list <- list()
for (i in 1:length(vars)) {
tmd.data.list[i] <- paste0(main.domain,
today,
when,
"/",
vars[i],
".d02." ,
today,
when,
".csv")
}
tmd.list <- tmd.data.list %>% map(read_csv)
tmd.data.list <- list()
#### domain 1 ####
for (i in 1:length(vars)) {
tmd.data.list[i] <- paste0(main.domain,
today,
when,
"/",
vars[i],
".d01." ,
today,
when,
".csv")
}
tmd.list <- tmd.data.list %>% map(read_csv)
names(tmd.list) <- vars
weather <- list_rbind(tmd.list, names_to = "var")
saveRDS(weather, file = paste0("weather_forecast_d01_", today, ".rds"))
d01.vars <- c("t2m", "rhum", "p3h")
### domain 2 #####
tmd.data.list <- list()
d02.vars <- c("t2m", "rhum", "p1h")
for (i in 1:length(vars)) {
tmd.data.list[i] <- paste0(main.domain,
today,
when,
"/",
vars[i],
".d02." ,
today,
when,
".csv")
}
tmd.list <- tmd.data.list %>% map(read_csv)
for (i in 1:length(vars)) {
tmd.data.list[i] <- paste0(main.domain,
today,
when,
"/",
d02.vars[i],
".d02." ,
today,
when,
".csv")
}
tmd.list <- tmd.data.list %>% map(read_csv)
names(tmd.list) <- d02.vars
weather <- list_rbind(tmd.list, names_to = "var")
saveRDS(weather, file = paste0("weather_forecast_d02_", today, ".rds"))
